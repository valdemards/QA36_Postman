{
	"info": {
		"_postman_id": "22e40f7c-37c4-495b-b576-19ef36402862",
		"name": "Group_36",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29265613"
	},
	"item": [
		{
			"name": "etc",
			"item": [
				{
					"name": "/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/first",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "/get_method",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/get_method?age=35&name=ud",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "age",
									"value": "35"
								},
								{
									"key": "name",
									"value": "ud"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "85",
									"type": "text"
								},
								{
									"key": "name",
									"value": "ud",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_1",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_1"
							],
							"query": [
								{
									"key": "age",
									"value": "35",
									"disabled": true
								},
								{
									"key": "weight",
									"value": "80",
									"disabled": true
								},
								{
									"key": "name",
									"value": "ud",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": 35,\r\n    \"salary\": 1000,\r\n    \"name\": \"ud\",\r\n    \"auth_token\": \"sdgeb(t5346\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info"
							],
							"query": [
								{
									"key": "age",
									"value": "35",
									"disabled": true
								},
								{
									"key": "weight",
									"value": "80",
									"disabled": true
								},
								{
									"key": "name",
									"value": "ud",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HW_1",
			"item": [
				{
					"name": "EP_1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/get_method?name=ud&age=80",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "ud"
								},
								{
									"key": "age",
									"value": "80"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "ud",
									"type": "text"
								},
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_3",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "ud",
									"disabled": true
								},
								{
									"key": "age",
									"value": "35",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "1000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_1?name=ud&age=35&weight=85",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "ud"
								},
								{
									"key": "age",
									"value": "35"
								},
								{
									"key": "weight",
									"value": "85"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_2?name=ud&age=35&salary=1000",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "ud"
								},
								{
									"key": "age",
									"value": "35"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_3?name=ud&age=35&salary=1000",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "ud"
								},
								{
									"key": "age",
									"value": "35"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_4?name=ud&age=35&salary=1000",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "ud"
								},
								{
									"key": "age",
									"value": "35"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EP_7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "ud",
									"type": "text"
								},
								{
									"key": "age",
									"value": "35",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "ud",
									"disabled": true
								},
								{
									"key": "age",
									"value": "35",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "1000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HW_2",
			"item": [
				{
					"name": "1./first",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "2./user_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqData = request.data\r",
									"let family = respData.family\r",
									"console.log(family)\r",
									"\r",
									"pm.test(\"nameTest_man\", function () {\r",
									"    pm.expect(respData.name).to.eql(\"ud\");\r",
									"});\r",
									"pm.test(\"ageTest_man\", function () {\r",
									"    pm.expect(+respData.age).to.eql(35);\r",
									"});\r",
									"pm.test(\"salaryTest_man\", function () {\r",
									"    pm.expect(respData.salary).to.eql(1000);\r",
									"});\r",
									"pm.test(\"nameTest_req\", function () {\r",
									"    pm.expect(respData.name).to.eql(reqData.name);\r",
									"});\r",
									"pm.test(\"ageTest_req\", function () {\r",
									"    pm.expect(+respData.age).to.eql(+reqData.age);\r",
									"});\r",
									"pm.test(\"salaryTest_req\", function () {\r",
									"    pm.expect(respData.salary).to.eql(+reqData.salary);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"salary*4Test\", function () {\r",
									"    pm.expect(family.u_salary_1_5_year).to.eql(+reqData.salary*4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "3./object_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqData = pm.request.url.query.toObject()\r",
									"let family = respData.family\r",
									"let dog = family.pets.dog\r",
									"console.log(family)\r",
									"\r",
									"\r",
									"pm.test(\"nameTest\", function () {\r",
									"    pm.expect(respData.name).to.eql(reqData.name);\r",
									"});\r",
									"pm.test(\"ageTest\", function () {\r",
									"    pm.expect(+respData.age).to.eql(+reqData.age);\r",
									"});\r",
									"pm.test(\"salaryTest\", function () {\r",
									"    pm.expect(+respData.salary).to.eql(+reqData.salary);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"dogNameExists\", function () {\r",
									"    pm.expect(dog).to.have.property(\"name\");\r",
									"});\r",
									"pm.test(\"dogAgeExists\", function () {\r",
									"    pm.expect(dog).to.have.property(\"age\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"dogNameTest\", function () {\r",
									"    pm.expect(dog.name).to.eql(\"Luky\");\r",
									"});\r",
									"pm.test(\"dogAgeTest\", function () {\r",
									"    pm.expect(dog.age).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_3?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4./object_info_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqData = pm.request.url.query.toObject()\r",
									"let reqSalary = reqData.salary\r",
									"let respSalary = respData.salary\r",
									"console.log(reqSalary)\r",
									"console.log(respSalary)\r",
									"console.log(respSalary[0])\r",
									"console.log(respSalary[1])\r",
									"console.log(respSalary[2])\r",
									"\r",
									"pm.test(\"nameTest\", function () {\r",
									"    pm.expect(respData.name).to.eql(reqData.name);\r",
									"});\r",
									"pm.test(\"ageTest\", function () {\r",
									"    pm.expect(+respData.age).to.eql(+reqData.age);\r",
									"});\r",
									"pm.test(\"salaryTest\", function () {\r",
									"    pm.expect(+respSalary[0]).to.eql(+reqSalary);\r",
									"});\r",
									"pm.test(\"salary*2Test\", function () {\r",
									"    pm.expect(+respSalary[1]).to.eql(+reqSalary*2);\r",
									"});\r",
									"pm.test(\"salary*3Test\", function () {\r",
									"    pm.expect(+respSalary[2]).to.eql(+reqSalary*3);\r",
									"});\r",
									"\r",
									"for (salary of respSalary) {\r",
									"    console.log(salary);\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "age",
									"value": "{{age}}"
								},
								{
									"key": "salary",
									"value": "{{salary}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5/user_info_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqData = request.data\r",
									"\r",
									"\r",
									"pm.test(\"startSalExists\", function () {\r",
									"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
									"});\r",
									"pm.test(\"6MonthSalExists\", function () {\r",
									"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
									"});\r",
									"pm.test(\"12MonthSalExists\", function () {\r",
									"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
									"});\r",
									"pm.test(\"18MonthSalExists\", function () {\r",
									"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
									"});\r",
									"pm.test(\"42MonthSalExists\", function () {\r",
									"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
									"});\r",
									"pm.test(\"6MonthSalExists\", function () {\r",
									"    pm.expect(respData).to.have.property(\"person\");\r",
									"});\r",
									"pm.test(\"person\", function () {\r",
									"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"startSalaryTest\", function () {\r",
									"    pm.expect(respData.start_qa_salary).to.eql(+reqData.salary);\r",
									"});\r",
									"pm.test(\"6MonthtSalaryTest\", function () {\r",
									"    pm.expect(respData.qa_salary_after_6_months).to.eql(+reqData.salary*2);\r",
									"});\r",
									"pm.test(\"12MonthtSalaryTest\", function () {\r",
									"    pm.expect(respData.qa_salary_after_12_months).to.eql(+reqData.salary*2.7);\r",
									"});\r",
									"pm.test(\"18MonthtSalaryTest\", function () {\r",
									"   pm.expect(respData[\"qa_salary_after_1.5_year\"]).to.eql(+reqData.salary*3.3);\r",
									"});\r",
									"pm.test(\"42MonthtSalaryTest\", function () {\r",
									"    pm.expect(respData[\"qa_salary_after_3.5_years\"]).to.eql(+reqData.salary*3.8);\r",
									"});\r",
									"pm.test(\"personSalaryTest\", function () {\r",
									"    pm.expect(respData.person.u_name[1]).to.eql(+reqData.salary);\r",
									"});\r",
									"pm.test(\"personAgeTest\", function () {\r",
									"    pm.expect(respData.person.u_age).to.eql(+reqData.age);\r",
									"});\r",
									"pm.test(\"person5YearsSalTest\", function () {\r",
									"    pm.expect(respData.person.u_salary_5_years).to.eql(+reqData.salary*4.2);\r",
									"});\r",
									"\r",
									"\r",
									"for (key in respData.person) {\r",
									"    console.log(respData.person[key]);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}",
									"disabled": true
								},
								{
									"key": "age",
									"value": "{{age}}",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			]
		},
		{
			"name": "HW_3",
			"item": [
				{
					"name": "1./login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"auth_token\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "str",
									"type": "text"
								},
								{
									"key": "password",
									"value": "str",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "login",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2./user_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqData = JSON.parse(pm.request.body.raw)\r",
									"\r",
									"let jsonSchema = {\r",
									"    'type': 'object',\r",
									"    'properties': {\r",
									"        'person': {\r",
									"            'type': 'object',\r",
									"            'properties': {\r",
									"                'u_age': { 'type': 'integer' },\r",
									"                'u_name': {\r",
									"                    'type': 'array',\r",
									"                    'items': [\r",
									"                        {'type': 'string'},\r",
									"                        {'type': 'integer'},\r",
									"                        {'type': 'integer'}\r",
									"                    ]\r",
									"                },\r",
									"                'u_salary_1_5_year': { 'type': 'integer' }\r",
									"            }\r",
									"        },'required': ['u_age', 'u_name', 'u_salary_1_5_year'],\r",
									"        'qa_salary_after_12_months': { 'type': 'integer' },\r",
									"        'qa_salary_after_6_months': { 'type': 'integer' },\r",
									"        'start_qa_salary': { 'type': 'integer' },\r",
									"    },'required': ['person', 'qa_salary_after_12_months', 'qa_salary_after_6_months', 'start_qa_salary']\r",
									"};\r",
									"\r",
									"console.log(respData)\r",
									"\r",
									"// pm.test(\"Validate schema\", () => {\r",
									"//     pm.response.to.have.jsonSchema(jsonSchema);\r",
									"// });\r",
									"\r",
									"pm.test('jsonSchemaTest', function () {\r",
									"    pm.expect(tv4.validate(respData, jsonSchema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"6MonthsSalaryTest\", function () {\r",
									"    pm.expect(respData.qa_salary_after_6_months).to.eql(reqData.salary*2);\r",
									"});\r",
									"pm.test(\"12MonthsSalaryTest\", function () {\r",
									"    pm.expect(respData.qa_salary_after_12_months).to.eql(reqData.salary*2.9);\r",
									"});\r",
									"pm.test(\"18MonthsSalaryTest\", function () {\r",
									"    pm.expect(respData.person.u_salary_1_5_year).to.eql(reqData.salary*4);\r",
									"});\r",
									"\r",
									"\r",
									"pm.environment.set(\"'u_salary_1_5_year\", respData.person.u_salary_1_5_year);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": {{age}},\r\n    \"salary\": {{salary}},\r\n    \"name\": \"{{name}}\",\r\n    \"auth_token\": \"{{auth_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "3./new_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqSalary = request.data.salary\r",
									"let respSalary = respData.salary\r",
									"\r",
									"let jsonSchema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"name\": {\"type\": \"string\"},\r",
									"    \"age\": {\"type\": \"integer\"},\r",
									"    \"salary\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"            {\"type\": \"integer\"},\r",
									"            {\"type\": \"string\"},\r",
									"            {\"type\": \"string\"}\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\"name\",\"age\",\"salary\"]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('jsonSchemaTest', function () {\r",
									"    pm.expect(tv4.validate(respData, jsonSchema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Salary*2Test\", function () {\r",
									"    pm.expect(+respSalary[1]).to.eql(reqSalary*2);\r",
									"});\r",
									"pm.test(\"Salary*3Test\", function () {\r",
									"    pm.expect(+respSalary[2]).to.eql(reqSalary*3);\r",
									"});\r",
									"pm.test(\"CheckSecondElement_v1\", function () {\r",
									"    pm.expect(+respSalary[2]).to.be.above(respSalary[0]).and.to.be.above(+respSalary[1]);\r",
									"});\r",
									"pm.test(\"CheckSecondElement_v2\", function () {\r",
									"    pm.expect(+respSalary[2]).to.be.eql(Math.max.apply(null, respSalary));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{auth_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "4./test_pet_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqWeight = request.data.weight\r",
									"\r",
									"\r",
									"let jsonSchema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"name\": {\"type\": \"string\"},\r",
									"    \"age\": {\"type\": \"integer\"},\r",
									"    \"daily_food\": {\"type\": \"number\"},\r",
									"    \"daily_sleep\": {\"type\": \"number\"}\r",
									"  },\"required\": [\"name\", \"age\", \"daily_food\", \"daily_sleep\"]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('jsonSchemaTest', function () {\r",
									"    pm.expect(tv4.validate(respData, jsonSchema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"DailyFoodTest\", function () {\r",
									"    pm.expect(respData.daily_food).to.eql(reqWeight*0.012);\r",
									"});\r",
									"pm.test(\"DailySleepTest\", function () {\r",
									"    pm.expect(respData.daily_sleep).to.eql(reqWeight*2.5);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "10",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{auth_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "5./get_test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let respData = pm.response.json();\r",
									"let reqData = request.data\r",
									"\r",
									"\r",
									"let jsonSchema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"name\": {\"type\": \"string\"},\r",
									"    \"age\": {\"type\": \"string\"},\r",
									"    \"salary\": {\"type\": \"integer\"},\r",
									"    \"family\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"children\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"u_salary_1_5_year\": {\"type\": \"integer\"}\r",
									"      },\r",
									"      \"required\": [\"children\",\"u_salary_1_5_year\"]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\"name\", \"age\", \"salary\", \"family\"]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test('jsonSchemaTest', function () {\r",
									"    pm.expect(tv4.validate(respData, jsonSchema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"nameTest\", function () {\r",
									"    pm.expect(respData.name).to.eql(pm.environment.get(\"name\"));\r",
									"});\r",
									"pm.test(\"ageTest\", function () {\r",
									"    pm.expect(respData.age).to.eql(reqData.age);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{auth_token}}",
									"type": "text"
								},
								{
									"key": "u_salary_1_5_year",
									"value": "{{'u_salary_1_5_year}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "6./currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(respData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{auth_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"currency"
							]
						}
					},
					"response": []
				},
				{
					"name": "7./curr_byn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(respData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{auth_token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			]
		}
	]
}